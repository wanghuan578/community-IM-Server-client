/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-08-07")
public class UpdateResourceRes implements org.apache.thrift.TBase<UpdateResourceRes, UpdateResourceRes._Fields>, java.io.Serializable, Cloneable, Comparable<UpdateResourceRes> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UpdateResourceRes");

  private static final org.apache.thrift.protocol.TField RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("result", org.apache.thrift.protocol.TType.I16, (short)1);
  private static final org.apache.thrift.protocol.TField UPDATE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("update_type", org.apache.thrift.protocol.TType.I16, (short)2);
  private static final org.apache.thrift.protocol.TField NEW_SOURCE_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("new_source_version", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DOWNLOAD_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("download_url", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField MD5_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("md5_value", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField FEATURE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("feature_url", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField FILE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("file_size", org.apache.thrift.protocol.TType.I32, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UpdateResourceResStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UpdateResourceResTupleSchemeFactory();

  public short result; // required
  public short update_type; // required
  public java.lang.String new_source_version; // required
  public java.lang.String download_url; // required
  public java.lang.String md5_value; // required
  public java.lang.String feature_url; // required
  public int file_size; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RESULT((short)1, "result"),
    UPDATE_TYPE((short)2, "update_type"),
    NEW_SOURCE_VERSION((short)3, "new_source_version"),
    DOWNLOAD_URL((short)4, "download_url"),
    MD5_VALUE((short)5, "md5_value"),
    FEATURE_URL((short)6, "feature_url"),
    FILE_SIZE((short)7, "file_size");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESULT
          return RESULT;
        case 2: // UPDATE_TYPE
          return UPDATE_TYPE;
        case 3: // NEW_SOURCE_VERSION
          return NEW_SOURCE_VERSION;
        case 4: // DOWNLOAD_URL
          return DOWNLOAD_URL;
        case 5: // MD5_VALUE
          return MD5_VALUE;
        case 6: // FEATURE_URL
          return FEATURE_URL;
        case 7: // FILE_SIZE
          return FILE_SIZE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RESULT_ISSET_ID = 0;
  private static final int __UPDATE_TYPE_ISSET_ID = 1;
  private static final int __FILE_SIZE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESULT, new org.apache.thrift.meta_data.FieldMetaData("result", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.UPDATE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("update_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.NEW_SOURCE_VERSION, new org.apache.thrift.meta_data.FieldMetaData("new_source_version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DOWNLOAD_URL, new org.apache.thrift.meta_data.FieldMetaData("download_url", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MD5_VALUE, new org.apache.thrift.meta_data.FieldMetaData("md5_value", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FEATURE_URL, new org.apache.thrift.meta_data.FieldMetaData("feature_url", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FILE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("file_size", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UpdateResourceRes.class, metaDataMap);
  }

  public UpdateResourceRes() {
  }

  public UpdateResourceRes(
    short result,
    short update_type,
    java.lang.String new_source_version,
    java.lang.String download_url,
    java.lang.String md5_value,
    java.lang.String feature_url,
    int file_size)
  {
    this();
    this.result = result;
    setResultIsSet(true);
    this.update_type = update_type;
    setUpdate_typeIsSet(true);
    this.new_source_version = new_source_version;
    this.download_url = download_url;
    this.md5_value = md5_value;
    this.feature_url = feature_url;
    this.file_size = file_size;
    setFile_sizeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UpdateResourceRes(UpdateResourceRes other) {
    __isset_bitfield = other.__isset_bitfield;
    this.result = other.result;
    this.update_type = other.update_type;
    if (other.isSetNew_source_version()) {
      this.new_source_version = other.new_source_version;
    }
    if (other.isSetDownload_url()) {
      this.download_url = other.download_url;
    }
    if (other.isSetMd5_value()) {
      this.md5_value = other.md5_value;
    }
    if (other.isSetFeature_url()) {
      this.feature_url = other.feature_url;
    }
    this.file_size = other.file_size;
  }

  public UpdateResourceRes deepCopy() {
    return new UpdateResourceRes(this);
  }

  @Override
  public void clear() {
    setResultIsSet(false);
    this.result = 0;
    setUpdate_typeIsSet(false);
    this.update_type = 0;
    this.new_source_version = null;
    this.download_url = null;
    this.md5_value = null;
    this.feature_url = null;
    setFile_sizeIsSet(false);
    this.file_size = 0;
  }

  public short getResult() {
    return this.result;
  }

  public UpdateResourceRes setResult(short result) {
    this.result = result;
    setResultIsSet(true);
    return this;
  }

  public void unsetResult() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RESULT_ISSET_ID);
  }

  /** Returns true if field result is set (has been assigned a value) and false otherwise */
  public boolean isSetResult() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RESULT_ISSET_ID);
  }

  public void setResultIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RESULT_ISSET_ID, value);
  }

  public short getUpdate_type() {
    return this.update_type;
  }

  public UpdateResourceRes setUpdate_type(short update_type) {
    this.update_type = update_type;
    setUpdate_typeIsSet(true);
    return this;
  }

  public void unsetUpdate_type() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UPDATE_TYPE_ISSET_ID);
  }

  /** Returns true if field update_type is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_type() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UPDATE_TYPE_ISSET_ID);
  }

  public void setUpdate_typeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UPDATE_TYPE_ISSET_ID, value);
  }

  public java.lang.String getNew_source_version() {
    return this.new_source_version;
  }

  public UpdateResourceRes setNew_source_version(java.lang.String new_source_version) {
    this.new_source_version = new_source_version;
    return this;
  }

  public void unsetNew_source_version() {
    this.new_source_version = null;
  }

  /** Returns true if field new_source_version is set (has been assigned a value) and false otherwise */
  public boolean isSetNew_source_version() {
    return this.new_source_version != null;
  }

  public void setNew_source_versionIsSet(boolean value) {
    if (!value) {
      this.new_source_version = null;
    }
  }

  public java.lang.String getDownload_url() {
    return this.download_url;
  }

  public UpdateResourceRes setDownload_url(java.lang.String download_url) {
    this.download_url = download_url;
    return this;
  }

  public void unsetDownload_url() {
    this.download_url = null;
  }

  /** Returns true if field download_url is set (has been assigned a value) and false otherwise */
  public boolean isSetDownload_url() {
    return this.download_url != null;
  }

  public void setDownload_urlIsSet(boolean value) {
    if (!value) {
      this.download_url = null;
    }
  }

  public java.lang.String getMd5_value() {
    return this.md5_value;
  }

  public UpdateResourceRes setMd5_value(java.lang.String md5_value) {
    this.md5_value = md5_value;
    return this;
  }

  public void unsetMd5_value() {
    this.md5_value = null;
  }

  /** Returns true if field md5_value is set (has been assigned a value) and false otherwise */
  public boolean isSetMd5_value() {
    return this.md5_value != null;
  }

  public void setMd5_valueIsSet(boolean value) {
    if (!value) {
      this.md5_value = null;
    }
  }

  public java.lang.String getFeature_url() {
    return this.feature_url;
  }

  public UpdateResourceRes setFeature_url(java.lang.String feature_url) {
    this.feature_url = feature_url;
    return this;
  }

  public void unsetFeature_url() {
    this.feature_url = null;
  }

  /** Returns true if field feature_url is set (has been assigned a value) and false otherwise */
  public boolean isSetFeature_url() {
    return this.feature_url != null;
  }

  public void setFeature_urlIsSet(boolean value) {
    if (!value) {
      this.feature_url = null;
    }
  }

  public int getFile_size() {
    return this.file_size;
  }

  public UpdateResourceRes setFile_size(int file_size) {
    this.file_size = file_size;
    setFile_sizeIsSet(true);
    return this;
  }

  public void unsetFile_size() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FILE_SIZE_ISSET_ID);
  }

  /** Returns true if field file_size is set (has been assigned a value) and false otherwise */
  public boolean isSetFile_size() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FILE_SIZE_ISSET_ID);
  }

  public void setFile_sizeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FILE_SIZE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case RESULT:
      if (value == null) {
        unsetResult();
      } else {
        setResult((java.lang.Short)value);
      }
      break;

    case UPDATE_TYPE:
      if (value == null) {
        unsetUpdate_type();
      } else {
        setUpdate_type((java.lang.Short)value);
      }
      break;

    case NEW_SOURCE_VERSION:
      if (value == null) {
        unsetNew_source_version();
      } else {
        setNew_source_version((java.lang.String)value);
      }
      break;

    case DOWNLOAD_URL:
      if (value == null) {
        unsetDownload_url();
      } else {
        setDownload_url((java.lang.String)value);
      }
      break;

    case MD5_VALUE:
      if (value == null) {
        unsetMd5_value();
      } else {
        setMd5_value((java.lang.String)value);
      }
      break;

    case FEATURE_URL:
      if (value == null) {
        unsetFeature_url();
      } else {
        setFeature_url((java.lang.String)value);
      }
      break;

    case FILE_SIZE:
      if (value == null) {
        unsetFile_size();
      } else {
        setFile_size((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RESULT:
      return getResult();

    case UPDATE_TYPE:
      return getUpdate_type();

    case NEW_SOURCE_VERSION:
      return getNew_source_version();

    case DOWNLOAD_URL:
      return getDownload_url();

    case MD5_VALUE:
      return getMd5_value();

    case FEATURE_URL:
      return getFeature_url();

    case FILE_SIZE:
      return getFile_size();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RESULT:
      return isSetResult();
    case UPDATE_TYPE:
      return isSetUpdate_type();
    case NEW_SOURCE_VERSION:
      return isSetNew_source_version();
    case DOWNLOAD_URL:
      return isSetDownload_url();
    case MD5_VALUE:
      return isSetMd5_value();
    case FEATURE_URL:
      return isSetFeature_url();
    case FILE_SIZE:
      return isSetFile_size();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UpdateResourceRes)
      return this.equals((UpdateResourceRes)that);
    return false;
  }

  public boolean equals(UpdateResourceRes that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_result = true;
    boolean that_present_result = true;
    if (this_present_result || that_present_result) {
      if (!(this_present_result && that_present_result))
        return false;
      if (this.result != that.result)
        return false;
    }

    boolean this_present_update_type = true;
    boolean that_present_update_type = true;
    if (this_present_update_type || that_present_update_type) {
      if (!(this_present_update_type && that_present_update_type))
        return false;
      if (this.update_type != that.update_type)
        return false;
    }

    boolean this_present_new_source_version = true && this.isSetNew_source_version();
    boolean that_present_new_source_version = true && that.isSetNew_source_version();
    if (this_present_new_source_version || that_present_new_source_version) {
      if (!(this_present_new_source_version && that_present_new_source_version))
        return false;
      if (!this.new_source_version.equals(that.new_source_version))
        return false;
    }

    boolean this_present_download_url = true && this.isSetDownload_url();
    boolean that_present_download_url = true && that.isSetDownload_url();
    if (this_present_download_url || that_present_download_url) {
      if (!(this_present_download_url && that_present_download_url))
        return false;
      if (!this.download_url.equals(that.download_url))
        return false;
    }

    boolean this_present_md5_value = true && this.isSetMd5_value();
    boolean that_present_md5_value = true && that.isSetMd5_value();
    if (this_present_md5_value || that_present_md5_value) {
      if (!(this_present_md5_value && that_present_md5_value))
        return false;
      if (!this.md5_value.equals(that.md5_value))
        return false;
    }

    boolean this_present_feature_url = true && this.isSetFeature_url();
    boolean that_present_feature_url = true && that.isSetFeature_url();
    if (this_present_feature_url || that_present_feature_url) {
      if (!(this_present_feature_url && that_present_feature_url))
        return false;
      if (!this.feature_url.equals(that.feature_url))
        return false;
    }

    boolean this_present_file_size = true;
    boolean that_present_file_size = true;
    if (this_present_file_size || that_present_file_size) {
      if (!(this_present_file_size && that_present_file_size))
        return false;
      if (this.file_size != that.file_size)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + result;

    hashCode = hashCode * 8191 + update_type;

    hashCode = hashCode * 8191 + ((isSetNew_source_version()) ? 131071 : 524287);
    if (isSetNew_source_version())
      hashCode = hashCode * 8191 + new_source_version.hashCode();

    hashCode = hashCode * 8191 + ((isSetDownload_url()) ? 131071 : 524287);
    if (isSetDownload_url())
      hashCode = hashCode * 8191 + download_url.hashCode();

    hashCode = hashCode * 8191 + ((isSetMd5_value()) ? 131071 : 524287);
    if (isSetMd5_value())
      hashCode = hashCode * 8191 + md5_value.hashCode();

    hashCode = hashCode * 8191 + ((isSetFeature_url()) ? 131071 : 524287);
    if (isSetFeature_url())
      hashCode = hashCode * 8191 + feature_url.hashCode();

    hashCode = hashCode * 8191 + file_size;

    return hashCode;
  }

  @Override
  public int compareTo(UpdateResourceRes other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetResult()).compareTo(other.isSetResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result, other.result);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdate_type()).compareTo(other.isSetUpdate_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_type, other.update_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNew_source_version()).compareTo(other.isSetNew_source_version());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNew_source_version()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.new_source_version, other.new_source_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDownload_url()).compareTo(other.isSetDownload_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownload_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.download_url, other.download_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMd5_value()).compareTo(other.isSetMd5_value());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMd5_value()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.md5_value, other.md5_value);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFeature_url()).compareTo(other.isSetFeature_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeature_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feature_url, other.feature_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFile_size()).compareTo(other.isSetFile_size());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFile_size()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.file_size, other.file_size);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UpdateResourceRes(");
    boolean first = true;

    sb.append("result:");
    sb.append(this.result);
    first = false;
    if (!first) sb.append(", ");
    sb.append("update_type:");
    sb.append(this.update_type);
    first = false;
    if (!first) sb.append(", ");
    sb.append("new_source_version:");
    if (this.new_source_version == null) {
      sb.append("null");
    } else {
      sb.append(this.new_source_version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("download_url:");
    if (this.download_url == null) {
      sb.append("null");
    } else {
      sb.append(this.download_url);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("md5_value:");
    if (this.md5_value == null) {
      sb.append("null");
    } else {
      sb.append(this.md5_value);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("feature_url:");
    if (this.feature_url == null) {
      sb.append("null");
    } else {
      sb.append(this.feature_url);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("file_size:");
    sb.append(this.file_size);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UpdateResourceResStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UpdateResourceResStandardScheme getScheme() {
      return new UpdateResourceResStandardScheme();
    }
  }

  private static class UpdateResourceResStandardScheme extends org.apache.thrift.scheme.StandardScheme<UpdateResourceRes> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UpdateResourceRes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RESULT
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.result = iprot.readI16();
              struct.setResultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // UPDATE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.update_type = iprot.readI16();
              struct.setUpdate_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NEW_SOURCE_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.new_source_version = iprot.readString();
              struct.setNew_source_versionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DOWNLOAD_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.download_url = iprot.readString();
              struct.setDownload_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MD5_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.md5_value = iprot.readString();
              struct.setMd5_valueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FEATURE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.feature_url = iprot.readString();
              struct.setFeature_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FILE_SIZE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.file_size = iprot.readI32();
              struct.setFile_sizeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UpdateResourceRes struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(RESULT_FIELD_DESC);
      oprot.writeI16(struct.result);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATE_TYPE_FIELD_DESC);
      oprot.writeI16(struct.update_type);
      oprot.writeFieldEnd();
      if (struct.new_source_version != null) {
        oprot.writeFieldBegin(NEW_SOURCE_VERSION_FIELD_DESC);
        oprot.writeString(struct.new_source_version);
        oprot.writeFieldEnd();
      }
      if (struct.download_url != null) {
        oprot.writeFieldBegin(DOWNLOAD_URL_FIELD_DESC);
        oprot.writeString(struct.download_url);
        oprot.writeFieldEnd();
      }
      if (struct.md5_value != null) {
        oprot.writeFieldBegin(MD5_VALUE_FIELD_DESC);
        oprot.writeString(struct.md5_value);
        oprot.writeFieldEnd();
      }
      if (struct.feature_url != null) {
        oprot.writeFieldBegin(FEATURE_URL_FIELD_DESC);
        oprot.writeString(struct.feature_url);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FILE_SIZE_FIELD_DESC);
      oprot.writeI32(struct.file_size);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UpdateResourceResTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UpdateResourceResTupleScheme getScheme() {
      return new UpdateResourceResTupleScheme();
    }
  }

  private static class UpdateResourceResTupleScheme extends org.apache.thrift.scheme.TupleScheme<UpdateResourceRes> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UpdateResourceRes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetResult()) {
        optionals.set(0);
      }
      if (struct.isSetUpdate_type()) {
        optionals.set(1);
      }
      if (struct.isSetNew_source_version()) {
        optionals.set(2);
      }
      if (struct.isSetDownload_url()) {
        optionals.set(3);
      }
      if (struct.isSetMd5_value()) {
        optionals.set(4);
      }
      if (struct.isSetFeature_url()) {
        optionals.set(5);
      }
      if (struct.isSetFile_size()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetResult()) {
        oprot.writeI16(struct.result);
      }
      if (struct.isSetUpdate_type()) {
        oprot.writeI16(struct.update_type);
      }
      if (struct.isSetNew_source_version()) {
        oprot.writeString(struct.new_source_version);
      }
      if (struct.isSetDownload_url()) {
        oprot.writeString(struct.download_url);
      }
      if (struct.isSetMd5_value()) {
        oprot.writeString(struct.md5_value);
      }
      if (struct.isSetFeature_url()) {
        oprot.writeString(struct.feature_url);
      }
      if (struct.isSetFile_size()) {
        oprot.writeI32(struct.file_size);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UpdateResourceRes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.result = iprot.readI16();
        struct.setResultIsSet(true);
      }
      if (incoming.get(1)) {
        struct.update_type = iprot.readI16();
        struct.setUpdate_typeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.new_source_version = iprot.readString();
        struct.setNew_source_versionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.download_url = iprot.readString();
        struct.setDownload_urlIsSet(true);
      }
      if (incoming.get(4)) {
        struct.md5_value = iprot.readString();
        struct.setMd5_valueIsSet(true);
      }
      if (incoming.get(5)) {
        struct.feature_url = iprot.readString();
        struct.setFeature_urlIsSet(true);
      }
      if (incoming.get(6)) {
        struct.file_size = iprot.readI32();
        struct.setFile_sizeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

