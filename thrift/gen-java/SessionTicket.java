/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-08-07")
public class SessionTicket implements org.apache.thrift.TBase<SessionTicket, SessionTicket._Fields>, java.io.Serializable, Cloneable, Comparable<SessionTicket> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SessionTicket");

  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("user_id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("user_name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField NICK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("nick_name", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CLIENT_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("client_ip", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CLIENT_MAC_FIELD_DESC = new org.apache.thrift.protocol.TField("client_mac", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CLIENT_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("client_version", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField APP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("app_id", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField SESSION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("session_id", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SESSION_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("session_key", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("end_time", org.apache.thrift.protocol.TType.I64, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SessionTicketStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SessionTicketTupleSchemeFactory();

  public int user_id; // required
  public java.lang.String user_name; // required
  public java.lang.String email; // required
  public java.lang.String nick_name; // required
  public java.lang.String client_ip; // required
  public java.lang.String client_mac; // required
  public java.lang.String client_version; // required
  public int app_id; // required
  public java.lang.String session_id; // required
  public java.lang.String session_key; // required
  public long create_time; // required
  public long end_time; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USER_ID((short)1, "user_id"),
    USER_NAME((short)2, "user_name"),
    EMAIL((short)3, "email"),
    NICK_NAME((short)4, "nick_name"),
    CLIENT_IP((short)5, "client_ip"),
    CLIENT_MAC((short)6, "client_mac"),
    CLIENT_VERSION((short)7, "client_version"),
    APP_ID((short)8, "app_id"),
    SESSION_ID((short)9, "session_id"),
    SESSION_KEY((short)10, "session_key"),
    CREATE_TIME((short)11, "create_time"),
    END_TIME((short)12, "end_time");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_ID
          return USER_ID;
        case 2: // USER_NAME
          return USER_NAME;
        case 3: // EMAIL
          return EMAIL;
        case 4: // NICK_NAME
          return NICK_NAME;
        case 5: // CLIENT_IP
          return CLIENT_IP;
        case 6: // CLIENT_MAC
          return CLIENT_MAC;
        case 7: // CLIENT_VERSION
          return CLIENT_VERSION;
        case 8: // APP_ID
          return APP_ID;
        case 9: // SESSION_ID
          return SESSION_ID;
        case 10: // SESSION_KEY
          return SESSION_KEY;
        case 11: // CREATE_TIME
          return CREATE_TIME;
        case 12: // END_TIME
          return END_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __USER_ID_ISSET_ID = 0;
  private static final int __APP_ID_ISSET_ID = 1;
  private static final int __CREATE_TIME_ISSET_ID = 2;
  private static final int __END_TIME_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("user_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("user_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NICK_NAME, new org.apache.thrift.meta_data.FieldMetaData("nick_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_IP, new org.apache.thrift.meta_data.FieldMetaData("client_ip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_MAC, new org.apache.thrift.meta_data.FieldMetaData("client_mac", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_VERSION, new org.apache.thrift.meta_data.FieldMetaData("client_version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_ID, new org.apache.thrift.meta_data.FieldMetaData("app_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SESSION_ID, new org.apache.thrift.meta_data.FieldMetaData("session_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SESSION_KEY, new org.apache.thrift.meta_data.FieldMetaData("session_key", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("end_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SessionTicket.class, metaDataMap);
  }

  public SessionTicket() {
  }

  public SessionTicket(
    int user_id,
    java.lang.String user_name,
    java.lang.String email,
    java.lang.String nick_name,
    java.lang.String client_ip,
    java.lang.String client_mac,
    java.lang.String client_version,
    int app_id,
    java.lang.String session_id,
    java.lang.String session_key,
    long create_time,
    long end_time)
  {
    this();
    this.user_id = user_id;
    setUser_idIsSet(true);
    this.user_name = user_name;
    this.email = email;
    this.nick_name = nick_name;
    this.client_ip = client_ip;
    this.client_mac = client_mac;
    this.client_version = client_version;
    this.app_id = app_id;
    setApp_idIsSet(true);
    this.session_id = session_id;
    this.session_key = session_key;
    this.create_time = create_time;
    setCreate_timeIsSet(true);
    this.end_time = end_time;
    setEnd_timeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SessionTicket(SessionTicket other) {
    __isset_bitfield = other.__isset_bitfield;
    this.user_id = other.user_id;
    if (other.isSetUser_name()) {
      this.user_name = other.user_name;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetNick_name()) {
      this.nick_name = other.nick_name;
    }
    if (other.isSetClient_ip()) {
      this.client_ip = other.client_ip;
    }
    if (other.isSetClient_mac()) {
      this.client_mac = other.client_mac;
    }
    if (other.isSetClient_version()) {
      this.client_version = other.client_version;
    }
    this.app_id = other.app_id;
    if (other.isSetSession_id()) {
      this.session_id = other.session_id;
    }
    if (other.isSetSession_key()) {
      this.session_key = other.session_key;
    }
    this.create_time = other.create_time;
    this.end_time = other.end_time;
  }

  public SessionTicket deepCopy() {
    return new SessionTicket(this);
  }

  @Override
  public void clear() {
    setUser_idIsSet(false);
    this.user_id = 0;
    this.user_name = null;
    this.email = null;
    this.nick_name = null;
    this.client_ip = null;
    this.client_mac = null;
    this.client_version = null;
    setApp_idIsSet(false);
    this.app_id = 0;
    this.session_id = null;
    this.session_key = null;
    setCreate_timeIsSet(false);
    this.create_time = 0;
    setEnd_timeIsSet(false);
    this.end_time = 0;
  }

  public int getUser_id() {
    return this.user_id;
  }

  public SessionTicket setUser_id(int user_id) {
    this.user_id = user_id;
    setUser_idIsSet(true);
    return this;
  }

  public void unsetUser_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USER_ID_ISSET_ID);
  }

  /** Returns true if field user_id is set (has been assigned a value) and false otherwise */
  public boolean isSetUser_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USER_ID_ISSET_ID);
  }

  public void setUser_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USER_ID_ISSET_ID, value);
  }

  public java.lang.String getUser_name() {
    return this.user_name;
  }

  public SessionTicket setUser_name(java.lang.String user_name) {
    this.user_name = user_name;
    return this;
  }

  public void unsetUser_name() {
    this.user_name = null;
  }

  /** Returns true if field user_name is set (has been assigned a value) and false otherwise */
  public boolean isSetUser_name() {
    return this.user_name != null;
  }

  public void setUser_nameIsSet(boolean value) {
    if (!value) {
      this.user_name = null;
    }
  }

  public java.lang.String getEmail() {
    return this.email;
  }

  public SessionTicket setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public java.lang.String getNick_name() {
    return this.nick_name;
  }

  public SessionTicket setNick_name(java.lang.String nick_name) {
    this.nick_name = nick_name;
    return this;
  }

  public void unsetNick_name() {
    this.nick_name = null;
  }

  /** Returns true if field nick_name is set (has been assigned a value) and false otherwise */
  public boolean isSetNick_name() {
    return this.nick_name != null;
  }

  public void setNick_nameIsSet(boolean value) {
    if (!value) {
      this.nick_name = null;
    }
  }

  public java.lang.String getClient_ip() {
    return this.client_ip;
  }

  public SessionTicket setClient_ip(java.lang.String client_ip) {
    this.client_ip = client_ip;
    return this;
  }

  public void unsetClient_ip() {
    this.client_ip = null;
  }

  /** Returns true if field client_ip is set (has been assigned a value) and false otherwise */
  public boolean isSetClient_ip() {
    return this.client_ip != null;
  }

  public void setClient_ipIsSet(boolean value) {
    if (!value) {
      this.client_ip = null;
    }
  }

  public java.lang.String getClient_mac() {
    return this.client_mac;
  }

  public SessionTicket setClient_mac(java.lang.String client_mac) {
    this.client_mac = client_mac;
    return this;
  }

  public void unsetClient_mac() {
    this.client_mac = null;
  }

  /** Returns true if field client_mac is set (has been assigned a value) and false otherwise */
  public boolean isSetClient_mac() {
    return this.client_mac != null;
  }

  public void setClient_macIsSet(boolean value) {
    if (!value) {
      this.client_mac = null;
    }
  }

  public java.lang.String getClient_version() {
    return this.client_version;
  }

  public SessionTicket setClient_version(java.lang.String client_version) {
    this.client_version = client_version;
    return this;
  }

  public void unsetClient_version() {
    this.client_version = null;
  }

  /** Returns true if field client_version is set (has been assigned a value) and false otherwise */
  public boolean isSetClient_version() {
    return this.client_version != null;
  }

  public void setClient_versionIsSet(boolean value) {
    if (!value) {
      this.client_version = null;
    }
  }

  public int getApp_id() {
    return this.app_id;
  }

  public SessionTicket setApp_id(int app_id) {
    this.app_id = app_id;
    setApp_idIsSet(true);
    return this;
  }

  public void unsetApp_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APP_ID_ISSET_ID);
  }

  /** Returns true if field app_id is set (has been assigned a value) and false otherwise */
  public boolean isSetApp_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APP_ID_ISSET_ID);
  }

  public void setApp_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APP_ID_ISSET_ID, value);
  }

  public java.lang.String getSession_id() {
    return this.session_id;
  }

  public SessionTicket setSession_id(java.lang.String session_id) {
    this.session_id = session_id;
    return this;
  }

  public void unsetSession_id() {
    this.session_id = null;
  }

  /** Returns true if field session_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSession_id() {
    return this.session_id != null;
  }

  public void setSession_idIsSet(boolean value) {
    if (!value) {
      this.session_id = null;
    }
  }

  public java.lang.String getSession_key() {
    return this.session_key;
  }

  public SessionTicket setSession_key(java.lang.String session_key) {
    this.session_key = session_key;
    return this;
  }

  public void unsetSession_key() {
    this.session_key = null;
  }

  /** Returns true if field session_key is set (has been assigned a value) and false otherwise */
  public boolean isSetSession_key() {
    return this.session_key != null;
  }

  public void setSession_keyIsSet(boolean value) {
    if (!value) {
      this.session_key = null;
    }
  }

  public long getCreate_time() {
    return this.create_time;
  }

  public SessionTicket setCreate_time(long create_time) {
    this.create_time = create_time;
    setCreate_timeIsSet(true);
    return this;
  }

  public void unsetCreate_time() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATE_TIME_ISSET_ID);
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATE_TIME_ISSET_ID);
  }

  public void setCreate_timeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATE_TIME_ISSET_ID, value);
  }

  public long getEnd_time() {
    return this.end_time;
  }

  public SessionTicket setEnd_time(long end_time) {
    this.end_time = end_time;
    setEnd_timeIsSet(true);
    return this;
  }

  public void unsetEnd_time() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __END_TIME_ISSET_ID);
  }

  /** Returns true if field end_time is set (has been assigned a value) and false otherwise */
  public boolean isSetEnd_time() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __END_TIME_ISSET_ID);
  }

  public void setEnd_timeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __END_TIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case USER_ID:
      if (value == null) {
        unsetUser_id();
      } else {
        setUser_id((java.lang.Integer)value);
      }
      break;

    case USER_NAME:
      if (value == null) {
        unsetUser_name();
      } else {
        setUser_name((java.lang.String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((java.lang.String)value);
      }
      break;

    case NICK_NAME:
      if (value == null) {
        unsetNick_name();
      } else {
        setNick_name((java.lang.String)value);
      }
      break;

    case CLIENT_IP:
      if (value == null) {
        unsetClient_ip();
      } else {
        setClient_ip((java.lang.String)value);
      }
      break;

    case CLIENT_MAC:
      if (value == null) {
        unsetClient_mac();
      } else {
        setClient_mac((java.lang.String)value);
      }
      break;

    case CLIENT_VERSION:
      if (value == null) {
        unsetClient_version();
      } else {
        setClient_version((java.lang.String)value);
      }
      break;

    case APP_ID:
      if (value == null) {
        unsetApp_id();
      } else {
        setApp_id((java.lang.Integer)value);
      }
      break;

    case SESSION_ID:
      if (value == null) {
        unsetSession_id();
      } else {
        setSession_id((java.lang.String)value);
      }
      break;

    case SESSION_KEY:
      if (value == null) {
        unsetSession_key();
      } else {
        setSession_key((java.lang.String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((java.lang.Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEnd_time();
      } else {
        setEnd_time((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_ID:
      return getUser_id();

    case USER_NAME:
      return getUser_name();

    case EMAIL:
      return getEmail();

    case NICK_NAME:
      return getNick_name();

    case CLIENT_IP:
      return getClient_ip();

    case CLIENT_MAC:
      return getClient_mac();

    case CLIENT_VERSION:
      return getClient_version();

    case APP_ID:
      return getApp_id();

    case SESSION_ID:
      return getSession_id();

    case SESSION_KEY:
      return getSession_key();

    case CREATE_TIME:
      return getCreate_time();

    case END_TIME:
      return getEnd_time();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case USER_ID:
      return isSetUser_id();
    case USER_NAME:
      return isSetUser_name();
    case EMAIL:
      return isSetEmail();
    case NICK_NAME:
      return isSetNick_name();
    case CLIENT_IP:
      return isSetClient_ip();
    case CLIENT_MAC:
      return isSetClient_mac();
    case CLIENT_VERSION:
      return isSetClient_version();
    case APP_ID:
      return isSetApp_id();
    case SESSION_ID:
      return isSetSession_id();
    case SESSION_KEY:
      return isSetSession_key();
    case CREATE_TIME:
      return isSetCreate_time();
    case END_TIME:
      return isSetEnd_time();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SessionTicket)
      return this.equals((SessionTicket)that);
    return false;
  }

  public boolean equals(SessionTicket that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_user_id = true;
    boolean that_present_user_id = true;
    if (this_present_user_id || that_present_user_id) {
      if (!(this_present_user_id && that_present_user_id))
        return false;
      if (this.user_id != that.user_id)
        return false;
    }

    boolean this_present_user_name = true && this.isSetUser_name();
    boolean that_present_user_name = true && that.isSetUser_name();
    if (this_present_user_name || that_present_user_name) {
      if (!(this_present_user_name && that_present_user_name))
        return false;
      if (!this.user_name.equals(that.user_name))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_nick_name = true && this.isSetNick_name();
    boolean that_present_nick_name = true && that.isSetNick_name();
    if (this_present_nick_name || that_present_nick_name) {
      if (!(this_present_nick_name && that_present_nick_name))
        return false;
      if (!this.nick_name.equals(that.nick_name))
        return false;
    }

    boolean this_present_client_ip = true && this.isSetClient_ip();
    boolean that_present_client_ip = true && that.isSetClient_ip();
    if (this_present_client_ip || that_present_client_ip) {
      if (!(this_present_client_ip && that_present_client_ip))
        return false;
      if (!this.client_ip.equals(that.client_ip))
        return false;
    }

    boolean this_present_client_mac = true && this.isSetClient_mac();
    boolean that_present_client_mac = true && that.isSetClient_mac();
    if (this_present_client_mac || that_present_client_mac) {
      if (!(this_present_client_mac && that_present_client_mac))
        return false;
      if (!this.client_mac.equals(that.client_mac))
        return false;
    }

    boolean this_present_client_version = true && this.isSetClient_version();
    boolean that_present_client_version = true && that.isSetClient_version();
    if (this_present_client_version || that_present_client_version) {
      if (!(this_present_client_version && that_present_client_version))
        return false;
      if (!this.client_version.equals(that.client_version))
        return false;
    }

    boolean this_present_app_id = true;
    boolean that_present_app_id = true;
    if (this_present_app_id || that_present_app_id) {
      if (!(this_present_app_id && that_present_app_id))
        return false;
      if (this.app_id != that.app_id)
        return false;
    }

    boolean this_present_session_id = true && this.isSetSession_id();
    boolean that_present_session_id = true && that.isSetSession_id();
    if (this_present_session_id || that_present_session_id) {
      if (!(this_present_session_id && that_present_session_id))
        return false;
      if (!this.session_id.equals(that.session_id))
        return false;
    }

    boolean this_present_session_key = true && this.isSetSession_key();
    boolean that_present_session_key = true && that.isSetSession_key();
    if (this_present_session_key || that_present_session_key) {
      if (!(this_present_session_key && that_present_session_key))
        return false;
      if (!this.session_key.equals(that.session_key))
        return false;
    }

    boolean this_present_create_time = true;
    boolean that_present_create_time = true;
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (this.create_time != that.create_time)
        return false;
    }

    boolean this_present_end_time = true;
    boolean that_present_end_time = true;
    if (this_present_end_time || that_present_end_time) {
      if (!(this_present_end_time && that_present_end_time))
        return false;
      if (this.end_time != that.end_time)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + user_id;

    hashCode = hashCode * 8191 + ((isSetUser_name()) ? 131071 : 524287);
    if (isSetUser_name())
      hashCode = hashCode * 8191 + user_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetNick_name()) ? 131071 : 524287);
    if (isSetNick_name())
      hashCode = hashCode * 8191 + nick_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetClient_ip()) ? 131071 : 524287);
    if (isSetClient_ip())
      hashCode = hashCode * 8191 + client_ip.hashCode();

    hashCode = hashCode * 8191 + ((isSetClient_mac()) ? 131071 : 524287);
    if (isSetClient_mac())
      hashCode = hashCode * 8191 + client_mac.hashCode();

    hashCode = hashCode * 8191 + ((isSetClient_version()) ? 131071 : 524287);
    if (isSetClient_version())
      hashCode = hashCode * 8191 + client_version.hashCode();

    hashCode = hashCode * 8191 + app_id;

    hashCode = hashCode * 8191 + ((isSetSession_id()) ? 131071 : 524287);
    if (isSetSession_id())
      hashCode = hashCode * 8191 + session_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetSession_key()) ? 131071 : 524287);
    if (isSetSession_key())
      hashCode = hashCode * 8191 + session_key.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(create_time);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(end_time);

    return hashCode;
  }

  @Override
  public int compareTo(SessionTicket other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetUser_id()).compareTo(other.isSetUser_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_id, other.user_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUser_name()).compareTo(other.isSetUser_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_name, other.user_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNick_name()).compareTo(other.isSetNick_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNick_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nick_name, other.nick_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClient_ip()).compareTo(other.isSetClient_ip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClient_ip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.client_ip, other.client_ip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClient_mac()).compareTo(other.isSetClient_mac());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClient_mac()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.client_mac, other.client_mac);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClient_version()).compareTo(other.isSetClient_version());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClient_version()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.client_version, other.client_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApp_id()).compareTo(other.isSetApp_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApp_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.app_id, other.app_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSession_id()).compareTo(other.isSetSession_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSession_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.session_id, other.session_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSession_key()).compareTo(other.isSetSession_key());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSession_key()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.session_key, other.session_key);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEnd_time()).compareTo(other.isSetEnd_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnd_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.end_time, other.end_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SessionTicket(");
    boolean first = true;

    sb.append("user_id:");
    sb.append(this.user_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("user_name:");
    if (this.user_name == null) {
      sb.append("null");
    } else {
      sb.append(this.user_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nick_name:");
    if (this.nick_name == null) {
      sb.append("null");
    } else {
      sb.append(this.nick_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("client_ip:");
    if (this.client_ip == null) {
      sb.append("null");
    } else {
      sb.append(this.client_ip);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("client_mac:");
    if (this.client_mac == null) {
      sb.append("null");
    } else {
      sb.append(this.client_mac);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("client_version:");
    if (this.client_version == null) {
      sb.append("null");
    } else {
      sb.append(this.client_version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("app_id:");
    sb.append(this.app_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("session_id:");
    if (this.session_id == null) {
      sb.append("null");
    } else {
      sb.append(this.session_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("session_key:");
    if (this.session_key == null) {
      sb.append("null");
    } else {
      sb.append(this.session_key);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("create_time:");
    sb.append(this.create_time);
    first = false;
    if (!first) sb.append(", ");
    sb.append("end_time:");
    sb.append(this.end_time);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SessionTicketStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SessionTicketStandardScheme getScheme() {
      return new SessionTicketStandardScheme();
    }
  }

  private static class SessionTicketStandardScheme extends org.apache.thrift.scheme.StandardScheme<SessionTicket> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SessionTicket struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.user_id = iprot.readI32();
              struct.setUser_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.user_name = iprot.readString();
              struct.setUser_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NICK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nick_name = iprot.readString();
              struct.setNick_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CLIENT_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.client_ip = iprot.readString();
              struct.setClient_ipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CLIENT_MAC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.client_mac = iprot.readString();
              struct.setClient_macIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CLIENT_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.client_version = iprot.readString();
              struct.setClient_versionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // APP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.app_id = iprot.readI32();
              struct.setApp_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SESSION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.session_id = iprot.readString();
              struct.setSession_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SESSION_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.session_key = iprot.readString();
              struct.setSession_keyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.create_time = iprot.readI64();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.end_time = iprot.readI64();
              struct.setEnd_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SessionTicket struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.user_id);
      oprot.writeFieldEnd();
      if (struct.user_name != null) {
        oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
        oprot.writeString(struct.user_name);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.nick_name != null) {
        oprot.writeFieldBegin(NICK_NAME_FIELD_DESC);
        oprot.writeString(struct.nick_name);
        oprot.writeFieldEnd();
      }
      if (struct.client_ip != null) {
        oprot.writeFieldBegin(CLIENT_IP_FIELD_DESC);
        oprot.writeString(struct.client_ip);
        oprot.writeFieldEnd();
      }
      if (struct.client_mac != null) {
        oprot.writeFieldBegin(CLIENT_MAC_FIELD_DESC);
        oprot.writeString(struct.client_mac);
        oprot.writeFieldEnd();
      }
      if (struct.client_version != null) {
        oprot.writeFieldBegin(CLIENT_VERSION_FIELD_DESC);
        oprot.writeString(struct.client_version);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(APP_ID_FIELD_DESC);
      oprot.writeI32(struct.app_id);
      oprot.writeFieldEnd();
      if (struct.session_id != null) {
        oprot.writeFieldBegin(SESSION_ID_FIELD_DESC);
        oprot.writeString(struct.session_id);
        oprot.writeFieldEnd();
      }
      if (struct.session_key != null) {
        oprot.writeFieldBegin(SESSION_KEY_FIELD_DESC);
        oprot.writeString(struct.session_key);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.create_time);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.end_time);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SessionTicketTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SessionTicketTupleScheme getScheme() {
      return new SessionTicketTupleScheme();
    }
  }

  private static class SessionTicketTupleScheme extends org.apache.thrift.scheme.TupleScheme<SessionTicket> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SessionTicket struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUser_id()) {
        optionals.set(0);
      }
      if (struct.isSetUser_name()) {
        optionals.set(1);
      }
      if (struct.isSetEmail()) {
        optionals.set(2);
      }
      if (struct.isSetNick_name()) {
        optionals.set(3);
      }
      if (struct.isSetClient_ip()) {
        optionals.set(4);
      }
      if (struct.isSetClient_mac()) {
        optionals.set(5);
      }
      if (struct.isSetClient_version()) {
        optionals.set(6);
      }
      if (struct.isSetApp_id()) {
        optionals.set(7);
      }
      if (struct.isSetSession_id()) {
        optionals.set(8);
      }
      if (struct.isSetSession_key()) {
        optionals.set(9);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(10);
      }
      if (struct.isSetEnd_time()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetUser_id()) {
        oprot.writeI32(struct.user_id);
      }
      if (struct.isSetUser_name()) {
        oprot.writeString(struct.user_name);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetNick_name()) {
        oprot.writeString(struct.nick_name);
      }
      if (struct.isSetClient_ip()) {
        oprot.writeString(struct.client_ip);
      }
      if (struct.isSetClient_mac()) {
        oprot.writeString(struct.client_mac);
      }
      if (struct.isSetClient_version()) {
        oprot.writeString(struct.client_version);
      }
      if (struct.isSetApp_id()) {
        oprot.writeI32(struct.app_id);
      }
      if (struct.isSetSession_id()) {
        oprot.writeString(struct.session_id);
      }
      if (struct.isSetSession_key()) {
        oprot.writeString(struct.session_key);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeI64(struct.create_time);
      }
      if (struct.isSetEnd_time()) {
        oprot.writeI64(struct.end_time);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SessionTicket struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.user_id = iprot.readI32();
        struct.setUser_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.user_name = iprot.readString();
        struct.setUser_nameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(3)) {
        struct.nick_name = iprot.readString();
        struct.setNick_nameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.client_ip = iprot.readString();
        struct.setClient_ipIsSet(true);
      }
      if (incoming.get(5)) {
        struct.client_mac = iprot.readString();
        struct.setClient_macIsSet(true);
      }
      if (incoming.get(6)) {
        struct.client_version = iprot.readString();
        struct.setClient_versionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.app_id = iprot.readI32();
        struct.setApp_idIsSet(true);
      }
      if (incoming.get(8)) {
        struct.session_id = iprot.readString();
        struct.setSession_idIsSet(true);
      }
      if (incoming.get(9)) {
        struct.session_key = iprot.readString();
        struct.setSession_keyIsSet(true);
      }
      if (incoming.get(10)) {
        struct.create_time = iprot.readI64();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.end_time = iprot.readI64();
        struct.setEnd_timeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

